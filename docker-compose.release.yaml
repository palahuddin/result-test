version: '3'
services:
    base-nginx:
      build: 
        context: ./
        dockerfile: ./infrastructure/nginx/release/Dockerfile
      image: jakmall/recruitment/cloud-engineer/counter/nginx/release
    base-php-fpm:
      build: 
        context: ./
        dockerfile: ./infrastructure/php/release/Dockerfile.php-fpm
        target: php-fpm-release
      image: jakmall/recruitment/cloud-engineer/counter/php-fpm/release
    base-worker:
      build: 
        context: ./
        dockerfile: ./infrastructure/php/release/Dockerfile.worker
        target: worker-release
      image: jakmall/recruitment/cloud-engineer/counter/worker/release
    nginx:
        image: jakmall/recruitment/cloud-engineer/counter/nginx/release
        ports: 
            - ${DOCKER_COMPOSE_NGINX_HOST_PORT}:80
        environment:
            - FASTCGI_PASS=php-fpm:9000
        links:
            - scheduler
            - php-fpm
            - worker
    php-fpm: 
        image: jakmall/recruitment/cloud-engineer/counter/php-fpm/release
        user: ${DOCKER_COMPOSE_USER}:${DOCKER_COMPOSE_USER_GROUP}
        env_file:
            - ./infrastructure/php/.env.local
        command: php-fpm
    worker: 
        image: jakmall/recruitment/cloud-engineer/counter/worker/release
        labels:
          ofelia.enabled: "true"
          ofelia.job-exec.workercron.schedule: "@every 60s"
          ofelia.job-exec.workercron.command: "php artisan schedule:run"
        user: ${DOCKER_COMPOSE_USER}:${DOCKER_COMPOSE_USER_GROUP}
        env_file:
            - ./infrastructure/php/.env.local
        command: php artisan queue:work
        links:
            - redis
            - mailhog
            - mysql
    scheduler:
        image: mcuadros/ofelia:v0.3.4
        depends_on:
            - worker
        command: daemon --docker
        volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            ofelia.job-local.worker-job.schedule: "@every 60s"
            ofelia.job-local.worker-job.command: "php artisan schedule:run"
    mailhog: 
        image: mailhog/mailhog:v1.0.1
        ports:
            - ${DOCKER_COMPOSE_MAILHOG_HOST_PORT}:8025
    mysql:
        image: mysql:8.0.23
        environment:
            - MYSQL_ALLOW_EMPTY_PASSWORD=yes
        volumes:
            - ../db-${APP_ENV}:/var/lib/mysql
    redis:
        image: redis:6.2.1-alpine






